@using MudBlazor
@using DevOpsAssistant.Services
@inject DevOpsConfigService ConfigService

<MudDialog>
    <MudDialogContent Class="pa-4">
        <MudStack Spacing="2">
            <MudTextField @bind-Value="_model.Organization" Label="Organization" />
            <MudTextField @bind-Value="_model.Project" Label="Project" />
            <MudTextField @bind-Value="_model.PatToken" Label="PAT Token" InputType="InputType.Password" />
        </MudStack>
    </MudDialogContent>
    <MudDialogActions Class="pa-4">
        <MudButton OnClick="Save" Color="Color.Primary">Save</MudButton>
        <MudButton OnClick="Cancel" Color="Color.Secondary">Cancel</MudButton>
    </MudDialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = default!;

    private DevOpsConfig _model = new();

    protected override void OnInitialized()
    {
        _model = new DevOpsConfig
        {
            Organization = ConfigService.Config.Organization,
            Project = ConfigService.Config.Project,
            PatToken = ConfigService.Config.PatToken
        };
    }

    private async Task Save()
    {
        await ConfigService.SaveAsync(_model);
        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel() => MudDialog.Cancel();
}
