@page "/projects/new"
@layout SimpleLayout
@using DevOpsAssistant.Services
@using DevOpsAssistant.Components
@inject DevOpsConfigService ConfigService
@inject NavigationManager NavigationManager
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<SettingsDialog> L
@inject IStringLocalizer<PatTokenDialog> TL

<PageTitle>DevOpsAssistant - New Project</PageTitle>

<MudPaper Class="p-4">
    <MudText Typo="Typo.h5" Class="mb-2">@L["NewProject"]</MudText>
    <MudTextField @bind-Value="_name" Label='@L["ProjectName"]' />
    <MudTextField @bind-Value="_organization" Label="DevOps Organization" Class="mt-2" />
    <MudTextField @bind-Value="_project" Label="DevOps Project" Class="mt-2" />
    <MudTextField @bind-Value="_patToken" Label="@TL["PatToken"]" InputType="InputType.Password" HelperText="Leave blank to use global token" Class="mt-2" />
    <MudButton OnClick="Create" Variant="Variant.Filled" Color="Color.Primary" Disabled="_name.Trim().Length < 2 || string.IsNullOrWhiteSpace(_organization) || string.IsNullOrWhiteSpace(_project)" Class="mt-2">@L["Create"]</MudButton>
</MudPaper>

@code {
    private string _name = string.Empty;
    private string _organization = string.Empty;
    private string _project = string.Empty;
    private string _patToken = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await ConfigService.LoadAsync();
    }

    private async Task Create()
    {
        await ConfigService.AddProjectAsync(_name);
        await ConfigService.SaveAsync(new DevOpsConfig
        {
            Organization = _organization,
            Project = _project,
            PatToken = _patToken
        });
        NavigationManager.NavigateTo($"/projects/{_name}", forceLoad: true);
    }
}
