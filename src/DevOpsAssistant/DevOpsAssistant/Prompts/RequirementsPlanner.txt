==== RequirementsPlanner_Main ====
//Requirements to stories
//{0} - Epics, Features, and User Stories or User Stories
You are a senior business analyst. Break down the following product requirement into {0}

Each story must include:
- Description
- Acceptance Criteria
- Tags to be used for refinement (e.g., ["frontend", "backend", "integration", "performance", "security", "accessibility", "needs-design"])

Use HTML for formatting in descriptions and acceptance criteria only when it improves readability, such as for bulleted lists, bold or italic. Avoid unnecessary tags like wrapping everything in <p> elements.

//{1} User story granularity
The granularity of the work items should be {1}/5 based on the following scale...

User Story Granularity Grading Scale (1–5)

| Grade | Description | Typical Characteristics |
|--------|-------------|------------------------|
| **1 — Broad Story** | Covers multiple related user goals, flows, or system areas. | Combines several functions or states; touches multiple parts of the system; acceptance criteria may cover several outcomes. |
| **2 — Multi-Aspect Story** | Focused on a single user goal but includes multiple flows or conditions. | May involve several variations, edge cases, or system interactions for one feature. |
| **3 — Focused Story** | Targets a single user goal or flow with defined scope. | Covers one path or behaviour; acceptance criteria address one clear outcome. |
| **4 — Narrow Story** | Describes a small, specific element of a user goal. | Handles a limited function, variation, or detail; minimal scope. |
| **5 — Micro Story** | Represents a very small unit of work, often tied to a single action or UI element. | Covers a minor detail or one technical aspect; narrowest possible scope for a story. |

//{2} Work Item Standards
{2}
//{3} Work Item Description Standards
{3}
//{4} Work Item AC Standards
{4}
//{5} - The text of the requirements document
Requirements Document:
{5}

//{6} Clarify Requirements
{6}

//{7} Appended User Prompt
{7}

==== RequirementsPlanner_StoriesOnly ====
Epics, Features, and User Stories.
Return strict JSON using this format:
{"epics":[{"title":"","description":"","features":[{"title":"","description":"","stories":[{"title":"","description":"","acceptanceCriteria":"","tags":[""]}]}]}]}

==== RequirementsPlanner_EpicsFeaturesStories ====
User Stories.
Return strict JSON using this format:
{"stories":[{"title":"","description":"","acceptanceCriteria":"","tags":[""]}]}

==== RequirementsPlanner_ClarifyRequirements ====
Clarify Requirements:
Before writing the output, review the requirement and ask for clarification if:
- Expected user behaviours or flows are ambiguous
- Access restrictions or permissions are not clearly defined
- Search or filtering functionality is mentioned without scope (e.g., partial matches, filtering fields)
- External system dependencies are implied but not detailed (e.g., email sending, file uploads, audit logging)
- Non-functional requirements are vague (e.g., "must be fast")
- It's unclear if optional elements (e.g., "nice to have" features) are in scope

If anything is unclear, ask precise, targeted clarification questions first, then proceed once answered.

==== RequirementsPlanner_WorkItemStandards ====
Ensure that the relevant work items adhere to the following standards:

==== RequirementsPlanner_WorkItemStandards_INVEST ====
INVEST - for more information consult https://agilealliance.org/glossary/invest/

==== RequirementsPlanner_WorkItemStandards_SAFe ====
SAFe - for more information consult https://framework.scaledagile.com/

==== RequirementsPlanner_WorkItemStandards_AgileAlliance ====
Agile Alliance User Story Specification - for more information consult https://framework.scaledagile.com/
https://agilealliance.org/glossary/user-stories/

==== RequirementsPlanner_WorkItemDescriptionStandards ====
Ensure that the relevant work item descriptions adhere to the following standards:

==== RequirementsPlanner_WorkItemDescriptionStandardsNone ====
Do not follow any standard framework for writing the work item descriptions, such as the Scrum USer Story or Job Story templates, but ensure that the descriptions are clear and unambiguous.

==== RequirementsPlanner_WorkItemDescriptionStandards_ScrumUserStory ====
Scrum User Story - in the 'As a <role>, I want <goal> so that <benefit>.' format

==== RequirementsPlanner_WorkItemDescriptionStandards_JobStory ====
Job Story - in the 'When [situation], I want to [motivation], so I can [expected outcome].' format

==== RequirementsPlanner_WorkItemACStandards ====
Ensure that the relevant work item acceptance criteria adhere to the following standards:

==== RequirementsPlanner_WorkItemACStandardsNone ====
Do not use gherkin syntax, bullet points or any other specific framework for writing the work item acceptance criteria, but ensure they are clear, comprehensive and well written.

==== RequirementsPlanner_WorkItemACStandards_Gherkin ====
Gherkin/BDD - in the 'Given-When-Then-And-But' format

==== RequirementsPlanner_WorkItemACStandards_BulletPoints ====
Bullet Points - write as plain bullet points that give a clear, simple list of the expected outcomes in the past tense

==== RequirementsPlanner_WorkItemACStandards_SAFe ====
SAFe - ensure the acceptance criteria follow the guidelines of SAFe, for more information consult https://framework.scaledagile.com/

